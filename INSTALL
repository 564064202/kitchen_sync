Compiling Kitchen Sync
======================

To compile Kitchen Sync, you will need:
* a C++11 compiler
* cmake
* boost program options library
* openssl library headers
* postgresql client library headers; and/or
* mysql client library headers

You can install these on Ubuntu using:
  apt-get install build-essential cmake libboost-program-options-dev libssl-dev
And one or both out of:
  apt-get install libpq-dev
  apt-get install libmysqlclient-dev

Homebrew users can install these on OS X using:
  brew install cmake boost
And one or both out of:
  brew install postgresql
  brew install mysql

To build, change to the kitchen_sync directory where you checked out the files, then:
  cd build
  cmake .. && make


Running the test suite
======================

If you want to run the test suite, you'll also need Ruby and the following gems installed:
  msgpack pg mysql2

You'll need to create some test databases for it to use:
  mysqladmin -u root create ks_test
  createdb --encoding unicode ks_test

You can override these database names, and if necessary the usernames and passwords it will
use, by setting the variables ENDPOINT_DATABASE_NAME, ENDPOINT_DATABASE_USERNAME, and
ENDPOINT_DATABASE_PASSWORD.  If you need to use different usernames etc. for the two databases,
you can instead use: MYSQL_DATABASE_NAME and POSTGRESQL_DATABASE_NAME; MYSQL_DATABASE_USERNAME
and POSTGRESQL_DATABASE_USERNAME; and MYSQL_DATABASE_PASSWORD and POSTGRESQL_DATABASE_PASSWORD.
You can also override the host or port that it uses if you want to test against a particular
instance; see test_helper.rb for more.

To run the suite, change to the kitchen_sync directory where you checked out the files, then:
  cd build
  cmake .. && make test

The normal cmake behavior is to report failures without giving any actual information about
them.  To get cmake to output on failures, use CTEST_OUTPUT_ON_FAILURE:
  cmake .. && CTEST_OUTPUT_ON_FAILURE=1 make test

You can also inspect the full test output in Testing/Temporary/LastTest.log.
